@use "sass:math";
@use "sass:meta";

$mobWidth: 375px;
$baseEm: 16px;
$baseRem: 16px;

html{
  font-size: $baseRem;
}

@function strip-unit($value) {
  @if meta.type-of($value) == "number" and not math.is-unitless($value) {
    @return math.div($value, $value * 0 + 1);
  }
  @return $value;
}
@function toCqw($value) {
  $cqwValue: (strip-unit($value)) + cqw;
  @return $cqwValue;
}
@function toEm($value) {
  $remValue: math.div(strip-unit($value), strip-unit($baseEm)) + em;
  @return $remValue;
}
@function toRem($value) {
  $remValue: math.div(strip-unit($value), strip-unit($baseRem)) + rem;
  @return $remValue;
}
@function toVw($value) {
  $remValue: math.div(strip-unit($value), strip-unit($mobWidth)) * 100vw;
  @return $remValue;
}



@function FCCCalc($minValue, $maxValue, $minWidth, $maxWidth) {
  $factor: math.div($maxValue - $minValue, $maxWidth - $minWidth);
  $factorScaled: toCqw($factor * 100);
  $b: toRem($minValue - ($factor * $minWidth));
  $fluid: '' + $factorScaled + ' + ' + $b + '';
  @return clamp(#{toRem($minValue)},#{$fluid},#{toRem($maxValue)});
}

@media screen and (max-width: toEm(768px)) {
  .box{
    font-size: toVw(16px);
    color: blue;
    flex-wrap: wrap; 
  }
}

@media screen and (min-width: toEm(769px)) {
  .box{
    font-size: FCCCalc(16,24,769,1200);
    color: red;
  }
  .image{
    width: FCCCalc(200,240,769,1200);
  
  }
  .text{
    width: calc(100% - FCCCalc(150,200,769,1200));
  }
}





